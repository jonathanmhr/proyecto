// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import * as CommitsAPI from "./commits.mjs";
import { Commits, } from "./commits.mjs";
import * as InferencePipelinesAPI from "./inference-pipelines.mjs";
import { InferencePipelines, } from "./inference-pipelines.mjs";
export class Projects extends APIResource {
    constructor() {
        super(...arguments);
        this.commits = new CommitsAPI.Commits(this._client);
        this.inferencePipelines = new InferencePipelinesAPI.InferencePipelines(this._client);
    }
    /**
     * Create a project in your workspace.
     */
    create(body, options) {
        return this._client.post('/projects', { body, ...options });
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.get('/projects', { query, ...options });
    }
}
Projects.Commits = Commits;
Projects.InferencePipelines = InferencePipelines;
//# sourceMappingURL=projects.mjs.map